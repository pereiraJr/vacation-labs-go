name: Go

on:
  push:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download Previous Artifact
      uses: actions/download-artifact@v2
      with:
        name: terraform.tfstate
        path: ./

    - name: Unzip artifact
      run: tar -zxvf ./terraform.tfstate.zip

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: TF_VAR_HEROKU_API_KEY=${{ secrets.RESOURCE_HEROKU_API_KEY }} TF_VAR_HEROKU_EMAIL=${{ secrets.EMAIL }} terraform plan

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: TF_VAR_HEROKU_API_KEY=${{ secrets.RESOURCE_HEROKU_API_KEY }} TF_VAR_HEROKU_EMAIL=${{ secrets.EMAIL }} terraform apply -auto-approve

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2 
      with:
        name: terraform.tfstate
        path: ./terraform.tfstate

  build:
    name: build
    needs: terraform
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

    - name: Test
      run:  go test ./...
      
  deploy:
    name: deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.APP_NAME }}
          heroku_email: ${{ secrets.EMAIL }}
